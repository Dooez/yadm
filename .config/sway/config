# Default config for sway

# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term contour
# set $btop class contour_btop early-exit-threshold 0 session contour_btop_session btop 
set $btop contour class contour_btop early-exit-threshold 0 btop --preset 1
# Your preferred application launcher
set $menu wofi --show drun

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill

set $outputl 'Xiaomi Corporation P27QBD-RG 4791210007933' 
set $outputr 'Xiaomi Corporation P27QBA-RX 4959910002735' 
set $outputz 'ZEU HDMI 0x00000055' 


output $outputl mode 2560x1440@165Hz pos 0 0 
output $outputr mode 2560x1440@165Hz pos 2560 0 
output $outputz mode 2560x1440@144Hz pos 2600 1440 scale 1.5

workspace 1 output $outputl
workspace 2 output $outputl
workspace 3 output $outputl
workspace 4 output $outputl
workspace 5 output $outputl

workspace 6  output $outputr
workspace 7  output $outputr
workspace 8  output $outputr
workspace 9  output $outputr
workspace 10 output $outputr

workspace 't' output $outputz
workspace 'y' output $outputz

#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout 300 'swaylock -f -c 000000' \
         timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
         before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input type:touchpad {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
  input type:keyboard {
      xkb_layout "us, ru"
      xkb_options "grp:alt_shift_toggle"
  }
#
# You can also configure each device individually.
# Read `man 5 sway-input` for more information about this section.

### Key bindings
    bindsym --to-code $mod+Return exec $term
    bindsym --to-code $mod+Shift+o exec $term
    bindsym --to-code $mod+q kill
    bindsym --to-code $mod+r exec $menu
    bindsym --to-code $mod+Escape exec $btop

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym --to-code $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym --to-code $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym --to-code $mod+$left focus left
    bindsym --to-code $mod+$down focus down
    bindsym --to-code $mod+$up focus up
    bindsym --to-code $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym --to-code $mod+Shift+$left move left
    bindsym --to-code $mod+Shift+$down move down
    bindsym --to-code $mod+Shift+$up move up
    bindsym --to-code $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    bindsym $mod+t workspace 't'
    bindsym $mod+y workspace 'y'
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    bindsym $mod+Shift+t move container to workspace 't'
    bindsym $mod+Shift+y move container to workspace 'y'
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym --to-code $mod+b splith
    bindsym --to-code $mod+v splitv

    # Switch the current container between different layout styles
    bindsym --to-code $mod+s layout stacking
    bindsym --to-code $mod+w layout tabbed
    bindsym --to-code $mod+d layout toggle split

    # Make the current focus fullscreen
    bindsym --to-code $mod+Shift+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym --to-code $mod+f floating toggle; [floating] border normal 2; [tiling] border pixel 2;

    # Swap focus between the tiling area and the floating area
    bindsym --to-code $mod+p focus mode_toggle

    # Move focus to the parent container
    bindsym --to-code $mod+Shift+a focus parent
    bindsym --to-code $mod+a focus child
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym --to-code $left resize shrink width 10px
    bindsym --to-code $down resize grow height 10px
    bindsym --to-code $up resize shrink height 10px
    bindsym --to-code $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym --to-code $mod+Shift+r mode "resize"
#
# Utilities:
#
    # Special keys to adjust volume via PulseAudio
    bindsym --locked XF86AudioMute exec swayosd-client --output-volume mute-toggle
    bindsym --locked XF86AudioLowerVolume exec swayosd-client --output-volume lower
    bindsym --locked XF86AudioRaiseVolume exec swayosd-client --output-volume raise
    bindsym --locked XF86AudioMicMute exec swayosd-client --input-volume mute-toggle
    # Special keys to adjust brightness via brightnessctl
    bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
    bindsym --locked XF86MonBrightnessUp exec brightnessctl set 5%+
    # Special key to take a screenshot with grim
    bindsym Print exec grim

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     position top
#
#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %X'; do sleep 1; done
#
#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }

set $base #242730
set $crust #181b21
set $yellow #cca83b
set $text #d9d1c9
set $rosewater #e1b9b9
set $cborder #cc8cdb
set $surface0 #313542
set $subtext1 #b3aca6

client.focused $yellow $yellow $base $cborder $yellow
client.unfocused $crust $crust $subtext1 $cborder $crust

default_floating_border normal 2
default_border pixel 2
for_window [app_id="contour_btop"] floating enable;
for_window [app_id="blueman-manager"] floating enable;
for_window [app_id="nmm-connection-editor"] floating enable;
for_window [app_id="pavuctorol"] floating enable;

include /etc/sway/config.d/*
exec systemctl --user set-environment EDITOR=nvim
exec gsettings set org.gnome.desktop.interface gtk-theme Catppuccin-Yellow-Dark-Macchiato

exec /usr/lib/mate-polkit/polkit-mate-authentication-agent-1
exec sway-audio-idle-inhibit
exec swayosd-server
exec swaync

exec waybar
exec nm-applet
exec blueman-applet
exec udiskie --tray
